% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/IndexFeatures.r
\name{IndexFeatures}
\alias{IndexFeatures}
\title{IndexFeatures}
\usage{
IndexFeatures(
  gRange.gnr_lst = NULL,
  constraint.gnr = NULL,
  chromSize.dtf = NULL,
  binSize.int = NULL,
  method.chr = "mean",
  variablesName.chr_vec = NULL,
  cores.num = 1,
  verbose.bln = TRUE
)
}
\arguments{
\item{gRange.gnr_lst}{<GRanges or GRangesList or list[GRanges]>: some GRanges or a list of GRanges or a GRangesList}

\item{constraint.gnr}{<GRanges>: A GRange of constraint regions. If NULL chromosomes in chromSize.dtf are used (Default NULL)}

\item{chromSize.dtf}{<data.frame>: A data.frame of genome where first colum correspond to the chromosomes names, and the second column correspond to the chromosomes lengths in base pairs.}

\item{binSize.int}{<integer>: A number that specify the width bins.}

\item{method.chr}{<character>: A string of a summary method name as 'mean', 'median', 'sum', 'max, 'min'. (Default 'mean'')}

\item{variablesName.chr_vec}{<character> : A character vector that specify the metadata columns of GRanges on which apply the summary method.}

\item{cores.num}{<integer> : An integer to specify the number of cores. (Default 1)}

\item{verbose.bln}{<logical>: A logical value. If TRUE show the progression in console. (Default TRUE)}
}
\value{
A GRange object.
}
\description{
Bin multiple GRanges and summary all in one GRange. Could overlap ranges with constraints regions
}
\examples{
GRanges_1.gr <- GenomicRanges::GRanges(
    seqnames = S4Vectors::Rle( c("chr1", "chr2"), c(4, 2) ),
    ranges = IRanges::IRanges(
        start = c(5, 220, 260, 540, 50, 540),
        end =  c(80, 240, 280, 560, 150, 580)),
    strand = S4Vectors::Rle(BiocGenerics::strand(c("-","+","*","-","+","+")), c(1,1,1,1,1,1)),
    score = 1:6,
    name = letters[1:6]
)
GRanges_1.gr
GRanges_2.gr <- GenomicRanges::GRanges(
    seqnames = S4Vectors::Rle( c("chr1", "chr2"), c(3, 2) ),
    ranges = IRanges::IRanges(
        start = c(140, 220, 450, 320, 360),
        end =  c(160, 280, 550, 350, 380)),
    strand = S4Vectors::Rle(BiocGenerics::strand(c("-","+","*")), c(1,2,2)),
    score = seq(10,50,10),
    name = letters[7:11]
)
GRanges_2.gr
GRanges_Constraint <- GenomicRanges::GRanges(
    seqnames = S4Vectors::Rle( c("chr1", "chr2"), c(2, 2) ),
    ranges = IRanges::IRanges(
        start = c(1, 251, 1, 50),
        end =  c(250, 490, 400, 190),
        names = paste0("C_",1:4)),
    strand = S4Vectors::Rle(BiocGenerics::strand(c("*")), c(4))
)
GRanges_Constraint
index.gnr = IndexFeatures(
    gRange.gnr_lst=list(GR_1 = GRanges_1.gr, GR_2 = GRanges_2.gr),
    constraint.gnr=GRanges_Constraint,
    chromSize.dtf=data.frame(
        seqnames=c("chr1", "chr2"),
        seqlengths=c(3500,2000)),
    binSize.int=100,
    method.chr ="mean",
    variablesName.chr_vec = c("score")
    )
index.gnr
}
